<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- 色定義 -->
    <Color x:Key="BackgroundColor">#FFFFFFFF</Color>
    <Color x:Key="ForegroundColor">#FF000000</Color>

    <!-- Title bar (active/inactive 両方定義しておくと自然) -->
    <SolidColorBrush x:Key="TitleBarBackgroundBrush" Color="#FFF3F3F3"/>
    <SolidColorBrush x:Key="TitleBarForegroundBrush" Color="#FF111111"/>
    <SolidColorBrush x:Key="TitleBarInactiveBackgroundBrush" Color="#FFEDEDED"/>
    <SolidColorBrush x:Key="TitleBarInactiveForegroundBrush" Color="#FF666666"/>

    <!-- SolidColorBrush定義 -->
    <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}" />
    <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource ForegroundColor}" />
    <SolidColorBrush x:Key="ButtonBackgroundBrush" Color="#dddddd"/>
    <SolidColorBrush x:Key="ButtonForegroundBrush" Color="Black"/>
    <SolidColorBrush x:Key="ButtonBorderBrush" Color="#1382da"/>
    <SolidColorBrush x:Key="ButtonHoverBackgroundBrush" Color="#c0ddeb"/>
    <SolidColorBrush x:Key="ButtonHoverForegroundBrush" Color="White"/>
    <SolidColorBrush x:Key="ButtonPressedBackgroundBrush" Color="#1382da"/>
    <SolidColorBrush x:Key="ButtonPressedForegroundBrush" Color="White"/>
    <!-- メニューの色選択 -->
    <SolidColorBrush x:Key="MenuBackgroundBrush" Color="#FFF3F3F3"/>
    <SolidColorBrush x:Key="MenuForegroundBrush" Color="#FF111111"/>
    <SolidColorBrush x:Key="MenuHighlightBrush" Color="#c0ddeb"/>
    <SolidColorBrush x:Key="MenuHighlightTextBrush" Color="White"/>
    
    <!-- スクロールバー -->
     <!-- ScrollBar 全体の背景 -->
    <SolidColorBrush x:Key="ScrollBarBackgroundBrush" Color="#FFF0F0F0"/>

    <!-- ScrollBar 全体の前景（テキストや矢印色の基準） -->
    <SolidColorBrush x:Key="ScrollBarForegroundBrush" Color="#FF444444"/>

    <!-- 上下の矢印ボタン -->
    <SolidColorBrush x:Key="ScrollBarButtonBackgroundBrush" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="ScrollBarButtonBorderBrush" Color="#FFCCCCCC"/>
    <SolidColorBrush x:Key="ScrollBarButtonArrowBrush" Color="#FF222222"/>

    <!-- ページ領域（Thumb の上下の空き部分） -->
    <SolidColorBrush x:Key="ScrollBarPageBackgroundBrush" Color="#FFF8F8F8"/>

    <!-- Thumb（つまみ部分） -->
    <SolidColorBrush x:Key="ScrollBarThumbBrush" Color="#FFCCCCCC"/>
    <SolidColorBrush x:Key="ScrollBarThumbBorderBrush" Color="#FF999999"/>

    <!-- コントロールスタイル例 -->
    <Style TargetType="Window">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
    </Style>

    <!-- TextBox -->
    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="CaretBrush" Value="{StaticResource ForegroundBrush}" />
    </Style>
    
    <!-- RichTextBox -->
    <Style TargetType="RichTextBox" BasedOn="{StaticResource {x:Type RichTextBox}}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="CaretBrush" Value="{StaticResource ForegroundBrush}" />
    </Style>

    <!-- Buttons -->
    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
    </Style>
    
    <!-- ToggleButtons  -->
    <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- 通常 -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonHoverBackgroundBrush}"/>
                        </Trigger>
                        <!-- 押された状態 -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonPressedBackgroundBrush}"/>
                        </Trigger>
                        <!-- 選択状態 -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonPressedBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 上下の矢印ボタン -->
    <Style x:Key="ScrollBarLineButtonStyle" TargetType="RepeatButton">
        <Setter Property="Background" Value="{DynamicResource ScrollBarButtonBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ScrollBarButtonBorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ScrollBarButtonArrowBrush}"/>
    </Style>

    <!-- ページ領域（Thumb の上下の空き部分） -->
    <Style x:Key="ScrollBarPageButtonStyle" TargetType="RepeatButton">
        <Setter Property="Background" Value="{DynamicResource ScrollBarPageBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!-- Thumb -->
    <Style x:Key="ScrollBarThumbStyle" TargetType="Thumb">
        <Setter Property="Background" Value="{DynamicResource ScrollBarThumbBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ScrollBarThumbBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>
    <!-- ScrollBar -->
    <Style TargetType="ScrollBar" BasedOn="{StaticResource {x:Type ScrollBar}}">
        <Setter Property="Background" Value="{DynamicResource ScrollBarBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ScrollBarForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- 上ボタン -->
                        <RepeatButton Grid.Row="0" Height="16"
                                  Style="{StaticResource ScrollBarLineButtonStyle}"
                                  Command="ScrollBar.LineUpCommand"/>

                        <!-- トラック -->
                        <Track Grid.Row="1" Name="PART_Track"
                           IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource ScrollBarPageButtonStyle}"
                                          Command="ScrollBar.PageUpCommand"/>
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumbStyle}"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource ScrollBarPageButtonStyle}"
                                          Command="ScrollBar.PageDownCommand"/>
                            </Track.IncreaseRepeatButton>
                        </Track>

                        <!-- 下ボタン -->
                        <RepeatButton Grid.Row="2" Height="16"
                                  Style="{StaticResource ScrollBarLineButtonStyle}"
                                  Command="ScrollBar.LineDownCommand"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Menu -->
    <Style TargetType="Menu" BasedOn="{StaticResource {x:Type Menu}}">
        <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource MenuForegroundBrush}" />
    </Style>

    <!-- MenuItem -->
    <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
        <Setter Property="Foreground" Value="{DynamicResource MenuForegroundBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="Height" Value="24"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <!-- メニューのヘッダー部分 -->
                            <ContentPresenter ContentSource="Header"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left" />
                            <!-- ↑ ForegroundプロパティはContentPresenterには存在しないため削除 -->

                            <!-- サブメニュー -->
                            <Popup Name="SubMenuPopup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsSubmenuOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Fade">
                                <Border Background="{DynamicResource MenuBackgroundBrush}"
                                        BorderBrush="{DynamicResource MenuForegroundBrush}"
                                        BorderThickness="1">
                                    <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSubmenuOpen" Value="True">
                            <Setter TargetName="SubMenuPopup" Property="IsOpen" Value="True"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!-- ホバー時 -->
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value="{DynamicResource MenuHighlightBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource MenuHighlightTextBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>

